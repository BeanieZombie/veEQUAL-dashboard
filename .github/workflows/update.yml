name: Update veEQUAL Data & Deploy API

on:
  schedule:
    # Run daily at 00:33 UTC
    - cron: 33 0 * * *
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  update-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: 1.0.2 # Pin stable version to avoid runtime crashes

    - name: Validate Bun Installation
      run: |
        bun --version || { echo "Bun installation failed"; exit 1; }
        echo "Bun installation validated successfully"

    - name: Install dependencies
      run: bun install

    - name: Create data directory
      run: mkdir -p data

    - name: Run data pipeline with retry logic
      run: |
        # Retry mechanism to handle potential Bun runtime crashes
        for i in {1..3}; do
          echo "Data pipeline attempt $i/3..."
          timeout 20m bun run update && break || {
            echo "Attempt $i failed, retrying in 5 seconds..."
            sleep 5
          }
        done
        if [ $? -ne 0 ]; then
          echo "Error: Data pipeline failed after 3 attempts"
          exit 1
        fi
        echo "Data pipeline completed successfully"
      timeout-minutes: 25
      env:
        NODE_ENV: production
        # Ensure the system uses reliable defaults
        SONIC_RPC: https://sonic-rpc.publicnode.com

    - name: Verify data integrity
      run: |
        # Check if essential data files were created
        if [ ! -f "data/veEqual.duckdb" ]; then
          echo "Error: Database file not created"
          exit 1
        fi
        if [ ! -f "veEQUAL.md" ]; then
          echo "Error: Markdown report not created"
          exit 1
        fi
        echo "Data integrity check passed"

    - name: Check for changes
      id: verify-changed-files
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "changed=false" >> $GITHUB_OUTPUT
        fi

    - name: Commit updated data
      if: steps.verify-changed-files.outputs.changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add -A
        git commit -m "ðŸ“Š Daily data update - $(date -u '+%Y-%m-%d %H:%M UTC')"
        git push

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload to Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
